version: "3.7"
services:

  mariadb:
    container_name: mariadb
    image: mariadb:10.5.8
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: my_db
    network_mode: "host"
    ports:
      - "3306:3306"
    volumes:
      - ./mariadb/data:/var/lib/mysql

  # mysq: has client to connect to external servers
  mysql:
    container_name: mysql
    image: mysql:8.0.22
    command: --default-authentication-plugin=mysql_native_password
    network_mode: "host"
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: my_db
    ports:
      - "3306:3306"
    volumes:
      - ./mariadb/data:/var/lib/mysql

  # sqlserver

  # postgres: has client to connect to external servers
  postgres:
    container_name: postgres
    image: postgres:13.1
    environment:
      POSTGRES_PASSWORD: "1234"
      POSTGRES_USER: "postgres"
      POSTGRES_DB: "postgres"
    restart: unless-stopped
    network_mode: "host"
    ports:
      - "5432:5432"
    volumes:
      -  ./postgres/data:/var/lib/postgresql/data

  # postgres sql browser
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment: 
      PGADMIN_DEFAULT_EMAIL: "admin@admin.com"
      PGADMIN_DEFAULT_PASSWORD: "1234"
      PGADMIN_LISTEN_ADDRESS: "0.0.0.0"
      SERVER_MODE: 0
      PGADMIN_LISTEN_PORT: "5454"
    network_mode: "host"
    ports:
      - "5454:80"
    
  # basic sql browser
  adminer:
    container_name: adminer
    image: adminer:latest
    network_mode: "host"
    ports:
      - 8080:8081

  # has client to connect to external servers
  redis:
    container_name: redis
    image: redis:6.0.9-buster
    command: "redis-server --port 6379"
    network_mode: "host"
    restart: unless-stopped

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.8.9-management
    network_mode: "host"
    ports: 
      - 15672:15672 
    environment:
      RABBITMQ_VM_MEMORY_HIGH_WATERMARK: "400MB"
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: "1234"
    volumes:
      - ./rabbitmq/data:/var/lib/rabbitmq

  # kafka
  # elastic 
  # mongo
  
  # nodejs ------------------
  
  nodejs:
    build:
      context: ./nodejs/
      dockerfile: ./vx.Dockerfile
      target: dev
    image: nodejs:dev
    network_mode: "host"
    
  nvm:
    build:
      context: ./nodejs/_nvm
    image: nvm
    network_mode: "host"
    volumes:
      - ./nodejs/_nvm/data:/home/nvm

  # go ------------------

  # go:
  #   build:
  #     context: ./go
  #     target: dev
  #   image: go:dev
  #   network_mode: "host"
  #   security_opt:
  #     - seccomp:unconfined
  #   volumes:
  #     - ./go/src:/go/src/app-go

  # php  ------------------

  php7:
    build:
      context: ./php
      dockerfile: ./v7.Dockerfile
      target: dev
    image: php7:dev
    network_mode: "host"
    volumes:
      - ./php:/usr/src/app

  php8:
    build:
      context: ./php
      dockerfile: ./v8.Dockerfile
      target: dev
    image: php8:dev
    network_mode: "host"
    volumes:
      - ./php:/usr/src/app

  # app-java:
  #   container_name: app-java
  #   build:
  #     context: ./app-java
  #     target: dev
  #     args: 
  #       - USER_UID=1001
  #       - USER_GID=1002
  #       - USER=docky
  #   image: app-java:dev
  #   # environment:
  #   user: docky
  #   network_mode: "host"
  #   extra_hosts:
  #     - "redis:127.0.0.1"
  #     - "postgres:127.0.0.1"
  #     - "mysql:127.0.0.1"
  #   volumes: 
  #     - ./app-java/src:/usr/src/app-java

  # todo: add .devcontainer 
  # app-node:
  #   container_name: app-node
  #   build:
  #     context: ./app-node
  #     target: dev
  #     args:
  #       - USER_UID=1001
  #       - USER_GID=1002
  #       - USER=docky
  #   image: app-node:dev
  #   user: docky
  #   network_mode: "host"
  #   ports:
  #     - "8000:8000"
  #   extra_hosts:
  #     - "redis:127.0.0.1"
  #     - "postgres:127.0.0.1"
  #     - "mysql:127.0.0.1"
  #   volumes: 
  #     - ./app-node/src:/node/src/app-node

  # app-php

  # no funciona
  # app-kotlin:
  #   container_name: app-kotlin
  #   build:
  #     context: ./app-kotlin
  #     target: dev
  #     args:
  #       - USER_UID=1001
  #       - USER_GID=1002
  #       - USER=docky
  #   image: app-kotlin:dev
  #   user: docky
  #   network_mode: "host"
  #   ports:
  #     - "8000:8000"
  #   extra_hosts:
  #     - "redis:127.0.0.1"
  #     - "postgres:127.0.0.1"
  #     - "mysql:127.0.0.1"
  #   volumes: 
  #     - ./app-kotlin/src:/kotlin/src/app-kotlin

  # databases:


